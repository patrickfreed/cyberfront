require 'net/http'
require 'json'

world_json = File.read('world.json')
world_data = JSON.parse(world_json)
  
url_hosts = "http://192.168.7.1/api/worlds/#{world_data['_id']['$oid']}/hosts"
puts url_hosts
puts world_data

response = Net::HTTP.get(URI(url_hosts))
data = JSON.parse(response)

puts data

CF_DIR = '/tmp/cf_ins/'

Vagrant.configure("2") { |config|
  data['hosts'].each() { |host|
    os = host['os']

    config.vm.define(host['hostname']) { |c|
      c.vm.box = os['box']
      c.vm.hostname = host['hostname']
      c.vm.network "private_network", type: "dhcp"

      if os['kernel'] == 'LINUX' then
        args = []

        c.vm.provision("shell", inline: "mkdir #{CF_DIR} && chmod 777 #{CF_DIR}")
        
        host['accounts'].each() { |account|
          args << "#{account['name']}:#{account['password']}"
        }

        c.vm.provision("shell",
                       path: '/cyberfront/scripts/user.sh',
                       args: args,
                       privileged: true,
                       name: 'user')

        (host['services'] + host['vulnerabilities']).each() { |mod|
          name = mod['name']
          options = mod['options']
          files = mod['files']

          c.vm.provision("shell", inline: "echo '#{mod.to_json}' >> #{CF_DIR}#{name}.json")

          if files then
            c.vm.provision("file",
                           source: files,
                           destination: "#{CF_DIR}#{name}.tar.gz")
          end

          options.each() { |k,v|
            if v.is_a? Array then
              new = ""
              v.each() { |vv|
                new += "#{vv.to_s} "
              }
              options[k] = new.chomp()
            end
          }

          options['CF_DIR'] = CF_DIR
          
          c.vm.provision("shell",
                         path: mod['install'],
                         args: [name],
                         env: options,
                         privileged: true,
                         name: name)
        }

        c.vm.provision("shell", inline: "rm -r #{CF_DIR}; rm /tmp/vagrant-shell")
      end
    }
  }
}
